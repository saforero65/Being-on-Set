"use strict"; var params = null, colsEdi = null, newColHtml = '<div class="btn-group pull-right"><button id="bEdit" type="button" class="btn btn-sm btn-default" onclick="butRowEdit(this);"><i class="bi bi-code-slash"></i></button><button id="bElim" type="button" class="btn btn-sm btn-default" onclick="butRowDelete(this);"><i class="bi bi-dash-circle"></i></button><button id="bAcep" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="butRowAcep(this);"><i class="bi bi-check-circle-fill"></i></button><button id="bCanc" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="butRowCancel(this);"><i class="bi bi-dash-circle-fill"></i></button></div>', newColHtml2 = '<div class="btn-group pull-right"><button id="bEdit" type="button" class="btn btn-sm btn-default" onclick="butRowEdit(this);"><span class="glyphicon glyphicon-pencil" > ✎ </span></button><button id="bElim" type="button" class="btn btn-sm btn-default" onclick="butRowDelete(this);"><span class="glyphicon glyphicon-trash" > X </span></button><button id="bAcep" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="butRowAcep(this);"><span class="glyphicon glyphicon-ok" > ✓ </span></button><button id="bCanc" type="button" class="btn btn-sm btn-default" style="display:none;" onclick="butRowCancel(this);"><span class="glyphicon glyphicon-remove" > → </span></button></div>', colEdicHtml = '<td name="buttons">' + newColHtml + "</td>"; function IterarCamposEdit(t, n) { var i = 0; t.each(function () { i++, "buttons" != $(this).attr("name") && function (t) { if (null == colsEdi) return !0; for (var n = 0; n < colsEdi.length; n++)if (t == colsEdi[n]) return !0; return !1 }(i - 1) && n($(this)) }) } function ModoEdicion(t) { return "editing" == t.attr("id") } function SetButtonsNormal(t) { $(t).parent().find("#bAcep").hide(), $(t).parent().find("#bCanc").hide(), $(t).parent().find("#bEdit").show(), $(t).parent().find("#bElim").show(), $(t).parents("tr").attr("id", "") } function SetButtonsEdit(t) { $(t).parent().find("#bAcep").show(), $(t).parent().find("#bCanc").show(), $(t).parent().find("#bEdit").hide(), $(t).parent().find("#bElim").hide(), $(t).parents("tr").attr("id", "editing") } function butRowAcep(t) { var n = $(t).parents("tr"), i = n.find("td"); ModoEdicion(n) && (IterarCamposEdit(i, function (t) { var n = t.find("input").val(); t.html(n) }), SetButtonsNormal(t), params.onEdit(n)) } function butRowCancel(t) { var n = $(t).parents("tr"), i = n.find("td"); ModoEdicion(n) && (IterarCamposEdit(i, function (t) { var n = t.find("div").html(); t.html(n) }), SetButtonsNormal(t)) } function butRowEdit(t) { var n = $(t).parents("tr"), i = n.find("td"); if (!ModoEdicion(n)) { var o = !1; IterarCamposEdit(i, function (t) { var n = t.html(), i = '<div style="display: none;">' + n + "</div>", a = '<input class="form-control input-sm"  value="' + n + '">'; t.html(i + a), o || (t.find("input").focus(), o = !0) }), SetButtonsEdit(t) } } function butRowDelete(t) { var n = $(t).parents("tr"); params.onBeforeDelete(n), n.remove(), params.onDelete() } function rowAddNew(t, n = []) { var i = $("#" + t), o = (i.find("tbody tr"), i.find("thead tr").find("th")), a = "", d = 0; o.each(function () { "buttons" == $(this).attr("name") ? a += colEdicHtml : d < n.length ? a = a + "<td>" + n[d] + "</td>" : a += "<td></td>", d++ }), i.find("tbody").append("<tr>" + a + "</tr>"), params.onAdd() } function rowAddNewAndEdit(t, n = []) { rowAddNew(t, n), butRowEdit($("#" + t + " tr:last").find("#bEdit")) } function TableToCSV(t, n) { var i = "", o = ""; return $("#" + t).find("tbody tr").each(function () { ModoEdicion($(this)) && $(this).find("#bAcep").click(); var t = $(this).find("td"); i = "", t.each(function () { "buttons" == $(this).attr("name") || (i = i + $(this).html() + n) }), "" != i && (i = i.substr(0, i.length - n.length)), o = o + i + "\n" }), o } function TableToJson(t) { var n = "{", i = []; $("#" + t + " tr").each(function (t) { var n = $(this).children(), o = []; n.each(function () { o.push('"' + $(this).text() + '"') }), i.push('"' + t + '": [' + o.join(",") + "]") }); return n += i.join(",") + "}" } $.fn.SetEditable = function (t) { params = $.extend({ columnsEd: null, $addButton: null, bootstrap: !0, onEdit: function () { }, onBeforeDelete: function () { }, onDelete: function () { }, onAdd: function () { } }, t); var n = this; n.find("thead tr").append('<th name="buttons"></th>'), params.bootstrap || (colEdicHtml = '<td name="buttons">' + newColHtml2 + "</td>"), n.find("tbody tr").append(colEdicHtml), null != params.$addButton && params.$addButton.click(function () { rowAddNew(n.attr("id")) }), null != params.columnsEd && (colsEdi = params.columnsEd.split(",")) };